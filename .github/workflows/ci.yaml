name: CI - Audio Stitcher

on:
  push:
    branches: [ main, dev, stag, prod ]
  pull_request:
    branches: [ main, dev, stag, prod ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # - name: Run tests
      #   run: |
      #     pytest tests/

      - name: Archive Lambda package
        run: |
          mkdir -p build
          zip -r build/audio_stitcher.zip src/

      - name: Upload Lambda package artifact
        uses: actions/upload-artifact@v4
        with:
          name: audio_stitcher
          path: build/audio_stitcher.zip

  terraform-plan:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: infra_automation
        run: terraform init

      - name: Terraform Format
        working-directory: infra_automation
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: infra_automation
        run: terraform validate

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: infra_automation
        run: terraform plan -var-file=dev.tfvars

  terraform-apply:
    if: github.ref == 'refs/heads/main'
    needs: terraform-plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra_automation
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Apply
        working-directory: infra_automation
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve -var-file=dev.tfvars

      - name: Deploy Lambda function code from S3
        working-directory: infra_automation
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          set -ex
          aws lambda update-function-code \
            --function-name audio-stitcher-dev-v1 \
            --s3-bucket pxd-ffmpeg-layer \
            --s3-key ffmpeg-layer.zip \
            --region ap-south-1